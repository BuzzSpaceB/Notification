{
  "name": "DatabaseStuff",
  "version": "1.0.0",
  "description": "This module contains functionality to connect to and use the database",
  "main": "index.js",
  "scripts": {
    "test": "node test/test.js",
    "test2": "node test/test2.js",
    "test3": "node test/test3.js",
    "start": "node index.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/BuzzSpaceB/DatabaseStuff.git"
  },
  "bugs": {
    "url": "https://github.com/BuzzSpaceB/DatabaseStuff/issues"
  },
  "homepage": "https://github.com/BuzzSpaceB/DatabaseStuff",
  "dependencies": {
    "mongoose": "^4.0.1"
  },
  "gitHead": "2ba5092b2bf89157eb8e8d176e468cdcfd2b05b6",
  "readme": "## Changes will/can be made to these files, without notice.\r\n\r\n# DatabaseStuff\r\nWe setup a module fot everyone to use which manages the database, from connection to all the schemas.\r\n\r\nAll collections are lowercase and in the plural form. e.g \"threads\" and not\"Thread\".\r\nAll variables (to gain access to a collection via the module) use the singular form form. e.g \"thread\" and not\"Threads\".\r\n```javascript\r\nvar modelName = ds.models.modelName;\r\n//e.g.\r\nvar space = ds.models.space;\r\nvar appraisal = ds.models.appraisal;\r\nvar module = ds.models.module;\r\nvar notification = ds.models.notification;\r\nvar post = ds.models.post;\r\nvar role = ds.models.role;\r\nvar serviceRestriction = ds.models.serviceRestriction;\r\nvar space = ds.models.space;\r\nvar subscription = ds.models.subscription;\r\nvar thread = ds.models.thread;\r\nvar user = ds.models.user;\r\nvar userSubscriptionSettings = ds.models.userSubscriptionSettings;\r\n//these variables are then the schemas \r\n```\r\n\r\n# How to use\r\n1. Add module dependancy to package.json file (you need mongoose as well)\r\n    Make sure you are using mongoose >= v4.0.1 as older versions gave problems\r\n  ```javascript\r\n    \"dependencies\": {\r\n      ...\r\n      \"mongoose\": \"^4.0.1\",\r\n      \"DatabaseStuff\": \"git://github.com/BuzzSpaceB/DatabaseStuff#master\"\r\n    }\r\n      \r\n  ```\r\n2. Let npm download the modules. In the console run:\r\n    ```\r\n        npm install\r\n    ```\r\n3. Initiate the models in your applications main file /when your buzz module starts up\r\n  ```javascript\r\n       var mongoose = require('mongoose')\r\n       , ds = require('DatabaseStuff');\r\n       \r\n       ds.init(mongoose);//this line is very important\r\n  ```\r\n4. Where you want to use a schema/the database use the following template\r\n  ```javascript\r\n      var ds = require('DatabaseStuff');\r\n      var modelName = ds.models.modelName;\r\n  \r\n      //then you can use it as you normally would have used a schema.\r\n  \r\n      modelName.findById(req.params.id, function(err, objFromDB) {\r\n          if (err)\r\n              console.log(err.message);\r\n          else{\r\n              var model= {modelData: objFromDB};\r\n              //do what you want\r\n          }\r\n      });\r\n  ```\r\n# Example\r\nSee the /test folder for more\r\n    ```javascript\r\n    var mongoose = require('mongoose')\r\n        , ds = require('DatabaseStuff');\r\n\r\n    ds.init(mongoose);\r\n\r\n    var space = ds.models.space;\r\n    var appraisal = ds.models.appraisal;\r\n    var module = ds.models.module;\r\n    var notification = ds.models.notification;\r\n    var post = ds.models.post;\r\n    var role = ds.models.role;\r\n    var serviceRestriction = ds.models.serviceRestriction;\r\n    var subscription = ds.models.subscription;\r\n    var thread = ds.models.thread;\r\n    var user = ds.models.user;\r\n    var userSubscriptionSettings = ds.models.userSubscriptionSettings;\r\n\r\n    appraisal.find(function (err, a) {\r\n        if (err)\r\n            console.log(\"ERR appraisal.find: \" + err);\r\n        else\r\n            console.log(\"Found \" + a.length + \" appraisals in the database.\");\r\n    });\r\n    module.find(function (err, a) {\r\n        if (err)\r\n            console.log(\"ERR module.find: \" + err);\r\n        else\r\n            console.log(\"Found \" + a.length + \" modules in the database.\");\r\n    });\r\n    notification.find(function (err, a) {\r\n        if (err)\r\n            console.log(\"ERR notification.find: \" + err);\r\n        else\r\n            console.log(\"Found \" + a.length + \" notifications in the database.\");\r\n    });\r\n    post.find(function (err, a) {\r\n        if (err)\r\n            console.log(\"ERR post.find: \" + err);\r\n        else\r\n            console.log(\"Found \" + a.length + \" posts in the database.\");\r\n    });\r\n\r\n    role.find(function (err, a) {\r\n        if (err)\r\n            console.log(\"ERR role.find: \" + err);\r\n        else\r\n            console.log(\"Found \" + a.length + \" roles in the database.\");\r\n    });\r\n\r\n    serviceRestriction.find(function (err, a) {\r\n        if (err)\r\n            console.log(\"ERR serviceRestriction.find: \" + err);\r\n        else\r\n            console.log(\"Found \" + a.length + \" serviceRestrictions in the database.\");\r\n    });\r\n\r\n    subscription.find(function (err, a) {\r\n        if (err)\r\n            console.log(\"ERR subscription.find: \" + err);\r\n        else\r\n            console.log(\"Found \" + a.length + \" subscriptions in the database.\");\r\n    });\r\n\r\n    thread.find(function (err, a) {\r\n        if (err)\r\n            console.log(\"ERR thread.find: \" + err);\r\n        else\r\n            console.log(\"Found \" + a.length + \" threads in the database.\");\r\n    });\r\n\r\n    user.find(function (err, a) {\r\n        if (err)\r\n            console.log(\"ERR user.find: \" + err);\r\n        else\r\n            console.log(\"Found \" + a.length + \" users in the database.\");\r\n    });\r\n\r\n    userSubscriptionSettings.find(function (err, a) {\r\n        if (err)\r\n            console.log(\"ERR userSubscriptionSettings.find: \" + err);\r\n        else\r\n            console.log(\"Found \" + a.length + \" userSubscriptionSettings in the database.\");\r\n    });\r\n    ```\r\n\r\n# How to view what is going on in the database\r\nDownload [Robomongo](http://robomongo.org/)\r\n## Settings\r\n### 1. Connection\r\n    Address: proximus.modulusmongo.net\r\n    Port: 27017\r\n### 2. Authentication\r\n```\r\nDatabase: purYv9ib\r\nUser Name: d3user\r\nPassword: DdJXhhsd2\r\n```\r\n",
  "readmeFilename": "README.md",
  "_id": "DatabaseStuff@1.0.0",
  "_shasum": "40b615a499500d7eb77ceabc7762d12106181622",
  "_from": "..\\..\\..\\..\\..\\..\\AppData\\Local\\Temp\\npm-2596-aa575bb4\\git-cache-757301890343\\2ba5092b2bf89157eb8e8d176e468cdcfd2b05b6",
  "_resolved": "git://github.com/BuzzSpaceB/DatabaseStuff#2ba5092b2bf89157eb8e8d176e468cdcfd2b05b6"
}
